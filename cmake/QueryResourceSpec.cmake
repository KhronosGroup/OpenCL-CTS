file(READ "${CTEST_RESOURCE_SPEC_FILE}" RESOURCE_SPEC_JSON)

function(QUERY_RESOURCE_SPEC_DEVICES OUT_VAR)
  string(JSON LOCAL_LENGTH LENGTH "${RESOURCE_SPEC_JSON}" "local" 0)
  math(EXPR RESOURCE_INDEX_STOP "${LOCAL_LENGTH} - 1")
  foreach(INDEX RANGE 0 ${RESOURCE_INDEX_STOP})
    string(JSON RESOURCE_TYPE MEMBER "${RESOURCE_SPEC_JSON}" "local" 0 ${INDEX})
    list(APPEND RESULT ${RESOURCE_TYPE})
  endforeach()
  set(${OUT_VAR} "${RESULT}" PARENT_SCOPE)
endfunction()

function(QUERY_RESOURCE_SPEC_LANG_MODE_FOR_DEVICE OUT_VAR LANGUAGE DEVICE)
  string(JSON LANGUAGES_LENGTH LENGTH "${RESOURCE_SPEC_JSON}" "local" 0 ${DEVICE} 0 languages)
  math(EXPR LANGUAGES_INDEX_STOP "${LANGUAGES_LENGTH} - 1")
  foreach(INDEX RANGE 0 ${LANGUAGES_INDEX_STOP})
    string(JSON LANG GET "${RESOURCE_SPEC_JSON}" "local" 0 ${DEVICE} 0 languages ${INDEX} lang)
    if(LANG STREQUAL LANGUAGE)
      string(JSON RESULT GET "${RESOURCE_SPEC_JSON}" "local" 0 ${DEVICE} 0 languages ${INDEX} mode)
      set(${OUT_VAR} "${RESULT}" PARENT_SCOPE)
      return()
    endif()
  endforeach()
endfunction()

function(QUERY_RESOURCE_SPEC_PROGRAM_OF_LANG_FOR_DEVICE OUT_VAR LANGUAGE DEVICE)
  string(JSON LANGUAGES_LENGTH LENGTH "${RESOURCE_SPEC_JSON}" "local" 0 ${DEVICE} 0 languages)
  math(EXPR LANGUAGES_INDEX_STOP "${LANGUAGES_LENGTH} - 1")
  foreach(INDEX RANGE 0 ${LANGUAGES_INDEX_STOP})
    string(JSON LANG GET "${RESOURCE_SPEC_JSON}" "local" 0 ${DEVICE} 0 languages ${INDEX} lang)
    if(LANG STREQUAL LANGUAGE)
      string(JSON PROGRAM_NAME GET "${RESOURCE_SPEC_JSON}" "local" 0 ${DEVICE} 0 languages ${INDEX} program)
      break()
    endif()
  endforeach()
  string(JSON COMPILERS_LENGTH LENGTH "${RESOURCE_SPEC_JSON}" "compilers")
  math(EXPR COMPILERS_INDEX_STOP "${COMPILERS_LENGTH} - 1")
  foreach(INDEX RANGE 0 ${COMPILERS_INDEX_STOP})
    string(JSON COMPILER_NAME GET "${RESOURCE_SPEC_JSON}" "compilers" ${INDEX} name)
    if(COMPILER_NAME STREQUAL PROGRAM_NAME)
      string(JSON PROGRAM GET "${RESOURCE_SPEC_JSON}" "compilers" ${INDEX} program)
      set(${OUT_VAR} "${PROGRAM}" PARENT_SCOPE)
      return()
    endif()
  endforeach()
endfunction()